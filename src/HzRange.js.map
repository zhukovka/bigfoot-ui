{"version":3,"file":"HzRange.js","sourceRoot":"","sources":["HzRange.ts"],"names":[],"mappings":"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","sourcesContent":["import {html, render} from '../node_modules/lit-html/lit-html.js';\n\nconst template = document.createElement('template');\ntemplate.innerHTML = `\n    <style>\n    :host{\n        display: block;\n        --width: 400px; \n    }\n    #hz-range {\n                        position: relative;\n                    }\n                \n                    input[type=\"range\"] {\n                        position: absolute;\n                        height: 5px;\n                        width: var(--width);\n                        top: 0;\n                        left: 0;\n                        padding: 7px 0 0;\n                        margin: 0;\n                        -webkit-appearance: none;\n                        background: transparent;\n                        border: none;\n                    }\n                    input[type=\"range\"]::-ms-track{\n                        width: 100%;\n                        /* Hides the slider so custom styles can be added */\n                        background: transparent;\n                        border-color: transparent;\n                        color: transparent;\n                \n                    }\n                    input[type=range]::-moz-range-track {\n                        width: 100%;\n                        background: transparent;\n                    }\n                    /* Special styling for WebKit/Blink */\n                    input[type=range]::-webkit-slider-thumb {\n                        -webkit-appearance: none;\n                        height: 12px;\n                        width: 7px;\n                        background: black;\n                    }\n                \n                    /* All the same stuff for Firefox */\n                    input[type=range]::-moz-range-thumb {\n                        height: 12px;\n                        width: 7px;\n                        background: black;\n                        border: none;\n                        border-radius: 0;\n                    }\n                \n                    /* All the same stuff for IE */\n                    input[type=range]::-ms-thumb {\n                        height: 12px;\n                        width: 7px;\n                        background: black;\n                        border: none;\n                        border-radius: 0;\n                    }\n    \n    </style>\n    <div id=\"hz-range\">\n        <input type=\"range\">\n        <div id=\"svg\">\n            Sorry, your browser does not support inline SVG.\n        </div>\n    </div>\n  `;\nexport default class HzRange extends HTMLElement {\n    private _x1: number;\n    private _x2: number;\n    private _y1: number;\n    private _y2: number;\n    private inputRange: HTMLInputElement | null;\n    private svgRange: Element | null;\n    private _value: number;\n\n    constructor () {\n        super();\n        this.attachShadow({mode : 'open'});\n        if (this.shadowRoot) {\n            this.shadowRoot.appendChild(template.content.cloneNode(true));\n            this.inputRange = this.shadowRoot.querySelector(\"input[type='range']\") as HTMLInputElement;\n            this.svgRange = this.shadowRoot.querySelector(\"#svg\");\n            this._x1 = 0;\n            this._x2 = 400;\n            this._y1 = 15;\n            this._y2 = 5;\n            this.addOnChange();\n        }\n    }\n\n    connectedCallback () {\n        if (this.parentElement && this.inputRange) {\n            this._x2 = this.parentElement.clientWidth;\n            this.style.setProperty('--width', this._x2 + \"px\");\n            this.render();\n\n        }\n    }\n\n    addOnChange () {\n        if (this.inputRange) {\n            this._value = +this.inputRange.value;\n            this.inputRange.addEventListener(\"input\", (e) => {\n                let target = e.currentTarget as HTMLInputElement;\n                this._value = +target.value;\n                this.render();\n                this.dispatchEvent(new CustomEvent('range-change', {\n                    bubbles : true,\n                    composed : true,\n                    detail : this._value\n                } as any));\n            })\n        }\n    }\n\n    svgRangeTemplate (w: number, h: number): any {\n        const {_x1, _x2, _y1, _y2} = this;\n        return html`\n                    <svg height=\"${_y1 + 5}\" width=\"${_x2 + 5}\">\n                        <polygon points=\"${_x1},${_y1} ${_x2},${_y1} ${_x2},${_y2}\" style=\"fill:lime;stroke: black; stroke-width: 2; stroke-linecap: round\"/>\n                        <polygon points=\"${_x1},${_y1} ${w},${_y1} ${w},${h}\" style=\"fill:purple;stroke: black; stroke-width: 2;stroke-linecap: round\"/>\n                    </svg>`;\n    }\n\n    render () {\n        if (this.svgRange) {\n            let k = (this._value / 100);\n            const w = this._x2 * k;\n            const h = this._y1 - (this._y1 - this._y2) * k;\n            render(this.svgRangeTemplate(w, h), this.svgRange);\n        }\n    }\n}\n"]}